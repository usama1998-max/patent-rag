"""
Django settings for main project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv
import mimetypes
import redis
import dj_database_url

mimetypes.add_type("text/css", ".css", True)
mimetypes.add_type("application/javascript", ".js", True)

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'daphne',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'channels',
    'storages',
    'rag',
]

ASGI_APPLICATION = "main.asgi.application"

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOW_ALL_ORIGINS = True

# Allow specific methods, including POST
CORS_ALLOW_METHODS = ["GET", "POST", "OPTIONS", "DELETE", "PATCH", "PUT"]

# Allow specific headers
CORS_ALLOW_HEADERS = ["Content-Type", "Authorization"]

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.

    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        # 'rest_framework.renderers.BrowsableAPIRenderer',
    ),

    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.TokenAuthentication'
    ),

    # 'DEFAULT_PERMISSION_CLASSES': (
    #     "rest_framework.permissions.IsAuthenticated",
    # ),

    # 'DEFAULT_PAGINATION_CLASS': "rest_framework.pagination.PageNumberPagination",
    # "PAGE_SIZE": 1,
}

ROOT_URLCONF = 'main.urls'

# AWS S3
# AWS_ACCESS_KEY = os.environ.get('AWS_ACCESS_KEY')
# AWS_SECRET_KEY = os.environ.get('AWS_SECRET_KEY')
# BUCKET_NAME = os.environ.get('BUCKET_NAME')
# Media files (For user uploads)


AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY')
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_KEY')
AWS_STORAGE_BUCKET_NAME = os.environ.get('BUCKET_NAME')
AWS_S3_REGION_NAME = "us-east-2"  # Change this to your region
AWS_S3_CUSTOM_DOMAIN = f"{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com"
AWS_QUERYSTRING_AUTH = False
MEDIA_URL = f"https://{AWS_S3_CUSTOM_DOMAIN}/media/"
# MEDIA_ROOT = os.path.join(BASE_DIR, "media") 

# TOGETHER AI
TOGETHER_API_KEY = os.environ.get('TOGETHER_API_KEY')
TOGETHER_LAMA_RAG_MODEL = "meta-llama/Meta-Llama-3.1-405B-Instruct-Turbo"
TOGETHER_DEEPSEEK_RAG_MODEL = "deepseek-ai/DeepSeek-R1"

TOGETHER_API_BASE_URL = "https://api.together.xyz/v1"

# GOOGLE GEMINI
GEMINI_API_KEY = os.environ.get('GEMINI_API_KEY')
GEMINI_RAG_MODEL_FLASH = "gemini-2.0-flash-001" # 
GEMINI_RAG_MODEL_PRO = "gemini-2.0-pro-exp-02-05"

# OPENAI
OPENAI_API_KEY = os.environ.get('OPENAI_API_KEY')
OPENAI_RAG_MODEL = "o1"

CLAUDE_API_KEY = os.environ.get('CLAUDE_API_KEY')
CLAUDE_RAG_MODEL = "claude-3-7-sonnet-20250219"

ALIBABA_API_KEY = os.environ.get('ALIBABA_API_KEY')
ALIBABA_BASE_URL = "https://dashscope-intl.aliyuncs.com/compatible-mode/v1"
ALIBABA_RAG_MODEL = "qwen-plus"

REDIS_HOST = os.environ.get('REDIS_HOST')
REDIS_PASSWORD = os.environ.get('REDIS_PASSWORD')
REDIS_CLOUD = redis.Redis(
    host=REDIS_HOST,
    port=15617,
    decode_responses=True,
    username="default",
    password=REDIS_PASSWORD,
)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "frontend", "dist")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'main.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# if DEBUG is True:
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
# else:
#     DATABASES = {
#         'default': dj_database_url.config(
#             default=os.getenv('DATABASE_URL'),
#             conn_max_age=600,
#             conn_health_checks=True,
#         )
#     }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'assets/'

STATICFILES_DIRS = [BASE_DIR / "frontend/dist/assets"]
STATIC_ROOT = BASE_DIR / "staticfiles"

# MEDIA_URL = "/media/"  # URL to access media files


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

DEFAULT_FILE_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"
